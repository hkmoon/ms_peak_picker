# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/python
jobs:

- job: 'Test'
  strategy:
    matrix:
      Python35:
        python.version: '3.5'
        imageName: "vs2017-win2016"
      Python36:
        python.version: '3.6'
        imageName: "vs2017-win2016"
      Python37:
        python.version: '3.7'
        imageName: "vs2017-win2016"
      Python38:
        python.version: '3.8'
      Python35Ubuntu:
        python.version: '3.5'
        imageName: "ubuntu-16.04"
      Python36Ubuntu:
        python.version: '3.6'
        imageName: "ubuntu-16.04"
      Python37Ubuntu:
        python.version: '3.7'
        imageName: "ubuntu-16.04"
      Python38Ubuntu:
        python.version: '3.8'
        imageName: "ubuntu-16.04"
    maxParallel: 4
  pool:
    vmImage: '$(imageName)'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
      python -m pip install --upgrade pip
      pip install Cython
      pip install -r requirements.txt
    displayName: 'Install dependencies'
  - script: |
      python setup.py develop
      pip install pytest
      pytest -v -l ms_peak_picker/test/ --junitxml=junit/test-results.xml
    displayName: 'pytest'
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

- job: 'Publish'
  dependsOn: 'Test'
  strategy:
    matrix:
      Python35:
        python.version: '3.5'
        imageName: "vs2017-win2016"
      Python36:
        python.version: '3.6'
        imageName: "vs2017-win2016"
      Python37:
        python.version: '3.7'
        imageName: "vs2017-win2016"
      Python38:
        python.version: '3.8'
      Python35Ubuntu:
        python.version: '3.5'
        imageName: "ubuntu-16.04"
      Python36Ubuntu:
        python.version: '3.6'
        imageName: "ubuntu-16.04"
      Python37Ubuntu:
        python.version: '3.7'
        imageName: "ubuntu-16.04"
    maxParallel: 4
  pool:
    vmImage: '$(imageName)'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
        python -m pip install --upgrade pip
        pip install Cython wheel
        pip install -r requirements.txt
        python setup.py sdist bdist_wheel
    displayName: 'Build sdist'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifact: dist'
    inputs:
      pathtoPublish: 'dist'
      artifactName: 'dist'